Tests for the command-line 'mh' utility. There's a lot going on here. First,
'mh' has the ability to clone itself, baking in files as it goes. This makes it
easier to use 'mh' as a shebang-line interpreter or compiler. 'build-test-mh'
exercises this functionality to construct 'test-mh', which is the shebang-line
interpreter for all of the other test files in this directory.

The tests mostly make sure that Caterwaul-based compilation and interpretation
work as they should. For example, 'console-log' looks like this:

#!./test-mh -r
# vim: set syntax=mh :
@js (console.log('hello world')) // using @js

The shebang line causes test-mh to compile it to Javascript and run the result.
test-mh has the Mulholland standard library baked in, so @js and 'using' are
both defined when the code is rewritten.

./make-sure-everything-works does exactly what you would expect.
